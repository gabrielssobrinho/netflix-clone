{"version":3,"sources":["services/api.js","styles/global.js","components/Header/style.js","components/Header/index.jsx","components/FeatureMovie/style.js","components/FeatureMovie/index.jsx","components/MovieRow/style.js","components/MovieRow/index.jsx","components/Footer/style.js","components/Footer/index.jsx","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","createGlobalStyle","HeaderStyled","styled","header","Header","black","className","href","src","alt","FeatureMovieStyled","section","media","lessThan","FeatureMovie","item","firstDate","Date","first_air_date","genres","i","push","name","style","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","overview","id","join","MovieRowStyled","div","MovieRow","useState","scrollX","setScrollX","onClick","x","Math","round","window","innerWidth","fontSize","listWidth","results","length","marginLeft","width","map","key","poster_path","original_title","FooterStyled","Footer","role","aria-label","App","movieList","setMovieList","featureData","setFeatureData","blackHeader","setBlackHeader","useEffect","Tmdb","list","originalsFromNetflix","filter","original","randomChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59e8498e.chunk.js","sourcesContent":["const API_KEY = '6ca014c078ab885f23a1f191a11bbd08'\r\nconst API_BASE = 'https://api.themoviedb.org/3'\r\n\r\nconst basicFetch = async endpoint => {\r\n  const req = await fetch(`${API_BASE}${endpoint}`)\r\n  const json = await req.json()\r\n  return json\r\n}\r\n// eslint-disable-next-line\r\nexport default {\r\n  getHomeList: async () => {\r\n    return [\r\n      {\r\n        slug: \"originals\",\r\n        title: 'Originais da Netflix',\r\n        items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: \"trending\",\r\n        title: \"Recomendados para Você\",\r\n        items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: \"toprated\",\r\n        title: \"Em Alta\",\r\n        items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n      }\r\n      ,\r\n      {\r\n        slug: \"action\",\r\n        title: \"Ação\",\r\n        items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: \"comedy\",\r\n        title: \"comedia\",\r\n        items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: \"horror\",\r\n        title: \"Terror\",\r\n        items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: \"romance\",\r\n        title: \"Romance\",\r\n        items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: \"documentary\",\r\n        title: \"Documentarios\",\r\n        items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n    ]\r\n  },\r\n  getMovieInfo: async (movieId, type) =>{\r\n    let info = {};\r\n\r\n    if(movieId){\r\n      switch(type){\r\n        case 'movie':\r\n          info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n        break;\r\n\r\n        case 'tv':\r\n          info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n        break\r\n        \r\n        default:\r\n          info = null;\r\n        break\r\n      }\r\n    }\r\n\r\n    return info;\r\n  }\r\n}","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n*{\r\n  box-sizing: border-box;\r\n}\r\nbody{\r\n  background-color: #111;\r\n  color: white;\r\n  margin: 0;\r\n  font-family: 'Roboto', sans-serif;\r\n}\r\n.lists{\r\n  margin-top:-150px;\r\n}\r\n.loading{\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  right: auto;\r\n  bottom: 0;\r\n  z-index: 99;\r\n  background-color: #000;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  img{\r\n    width: 100%;\r\n    background-position: center;\r\n    background-size: cover;\r\n  }\r\n}\r\n`\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderStyled = styled.header`\r\n  position: fixed;\r\n  z-index: 999;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 70px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 2%;\r\n  background: transparent;\r\n  transition: all ease .4s;\r\n  &.black{\r\n    background-color: #141414;\r\n  }\r\n  .img-controler{\r\n    height: 30px;\r\n    img{\r\n     height: 100%;\r\n   }\r\n  }\r\n\r\n`;\r\n","import React from 'react'\r\nimport { HeaderStyled } from './style'\r\n\r\nexport default function Header({black}) {\r\n  return (\r\n    <HeaderStyled className={black ? 'black' : ''}>\r\n      <div className=\"header--logo img-controler\">\r\n        <a href=\"/\">\r\n          <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/Netflix_2014_logo.svg/640px-Netflix_2014_logo.svg.png\" alt=\"Logo da Netflix\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"header--user img-controler\">\r\n        <a href=\"/\">\r\n          <img src=\"https://i.pinimg.com/564x/b6/77/cd/b677cd1cde292f261166533d6fe75872.jpg\" alt=\"user\" />\r\n        </a>\r\n      </div>\r\n    </HeaderStyled>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\nimport media from 'styled-media-query'\r\n\r\nexport const FeatureMovieStyled = styled.section`\r\n  height: 100vh;\r\n  background-size:cover;\r\n  background-position:center;\r\n  ${media.lessThan(\"large\")`\r\n    height: 90vh;\r\n  `}\r\n  .featured--vertical{\r\n    width: inherit;\r\n    height: inherit;\r\n    background: linear-gradient(to top, #111 10%, transparent 90%);\r\n    .featured--horizontal{\r\n      width: inherit;\r\n      height: inherit;\r\n      background: linear-gradient(to right, #111 30%, transparent 70%);\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      padding: 70px 0 150px 30px;\r\n      .featured--name{\r\n        font-size: 60px;\r\n        font-weight: bold;\r\n        ${media.lessThan(\"large\")`\r\n          font-size: 16px;\r\n        `}  \r\n      }\r\n      .featured--info{\r\n          font-size:18px;\r\n          font-weight: bold;\r\n          margin-top: 15px;\r\n          .featured--points{\r\n            color: #46d369;\r\n          }\r\n          .display-block-and-margin{\r\n            display: inline-block;\r\n            margin-right:15px; \r\n          }\r\n      }\r\n      .featured--description{\r\n        margin-top: 15px;\r\n        font-size: 20px;\r\n        color: #999;\r\n        max-width: 40%;\r\n        height: 40%;\r\n        overflow: auto;\r\n        text-overflow: ellipsis;\r\n\r\n        ${media.lessThan(\"medium\")`\r\n          max-width: 100%;\r\n          font-size:14px;\r\n          margin-right:30pz;\r\n        `}\r\n        &::-webkit-scrollbar {width:0}\r\n      }\r\n      .feature--buttons{\r\n        margin-top: 15px;\r\n        .btn{\r\n          display: inline-block;\r\n          font-size: 20px;\r\n          font-weight: bold;\r\n          padding: 12px 25px;\r\n          border-radius: 5px;\r\n          text-decoration: none;\r\n          margin-right: 10px;\r\n          opacity: 1;\r\n          transition: all ease .4s;\r\n          &:hover{\r\n            opacity: 0.7;\r\n          }\r\n          ${media.lessThan(\"medium\")`\r\n            font-size: 16px;\r\n          `}\r\n        }\r\n        .featured--watchbutton{\r\n          background-color: #fff;\r\n          color: #000;\r\n        }\r\n        .featured--mylistbutton{\r\n          background-color: #333;\r\n          color: #fff;\r\n        }\r\n      }\r\n      .featured--genres{\r\n        margin-top: 15px;\r\n        font-size: 14px;\r\n        color: #999;\r\n        ${media.lessThan(\"medium\")`\r\n          font-size: 14px; \r\n        `}\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport { FeatureMovieStyled } from './style'\r\n\r\n\r\nexport default function FeatureMovie({item}) {\r\n  let firstDate = new Date(item.first_air_date)\r\n  let genres = []\r\n  for(let i in item.genres){\r\n    genres.push(item.genres[i].name)\r\n  }\r\n\r\n  return (\r\n    <FeatureMovieStyled\r\n    style={{\r\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n    }}\r\n    >\r\n      <div className=\"featured--vertical\">\r\n        <div className=\"featured--horizontal\">\r\n          <div className=\"featured--name\">{item.original_name}</div>\r\n         \r\n          <div className=\"featured--info\">\r\n            <div className=\"featured--points display-block-and-margin\">{item.vote_average} pontos</div>\r\n            <div className=\"featured--year display-block-and-margin\">{firstDate.getFullYear()}</div>\r\n            <div className=\"featured--seasons display-block-and-margin\">{item.number_of_seasons} {item.number_of_seasons === 1? <>temporada</>: <>temporadas</>}</div>\r\n          </div>\r\n         \r\n          <div className=\"featured--description\">{item.overview}</div>\r\n        \r\n          <div className=\"feature--buttons\">\r\n            <a className=\"featured--watchbutton btn\" href={`/watch/${item.id}`}>Assistir</a>\r\n            <a className=\"featured--mylistbutton btn\" href={`/list/add/${item.id}`}>+ Minha Lista</a>\r\n          </div>\r\n        \r\n          <div className=\"featured--genres\">Gêneros <strong>{genres.join(', ')}</strong></div>\r\n        </div>\r\n      </div>\r\n\r\n    </FeatureMovieStyled>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\nimport media from 'styled-media-query'\r\n\r\nexport const MovieRowStyled = styled.div`\r\n  margin-bottom: 30px;\r\n  position: relative;\r\n  h2{\r\n    margin: 0 0 0 30px;\r\n  }\r\n  .movieRow{\r\n    position: absolute;\r\n    width: 40px;\r\n    height: 225px;\r\n    z-index:99;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    background-color: rgba(0,0,0,0.6);\r\n    cursor: pointer;\r\n    opacity: 0;\r\n    transition: .4s;\r\n    top: 20%;\r\n    ${media.lessThan(\"large\")`\r\n    opacity: 1;\r\n    `}\r\n  }\r\n  .movieRow-left{\r\n    left: 0;\r\n  }\r\n  .movieRow-right{\r\n    right: 0;\r\n  }\r\n  &:hover .movieRow-left{\r\n    opacity: 1;\r\n  }\r\n  &:hover .movieRow-right{\r\n    opacity: 1;\r\n  }\r\n\r\n  .movieRow--listarea{\r\n    overflow-x: hidden;\r\n    padding: 30px;\r\n  }\r\n  .movieRow--list{\r\n    transition: all.4s;\r\n  }\r\n  .movieRow--item {\r\n    display: inline-block;\r\n    width: 150px;\r\n    cursor: pointer;\r\n    img{\r\n      width: 100%;\r\n      transform: scale(0.9);\r\n      transition: all ease .4s;\r\n      &:hover{\r\n        transform: scale(1);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react'\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore'\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext'\r\n\r\n\r\n\r\nimport {MovieRowStyled} from './style'\r\n\r\nexport default function MovieRow({title, items}) {\r\n  const [scrollX, setScrollX] = useState(0)\r\n  const handleLeftArrow = () => {\r\n    let x = scrollX + Math.round(window.innerWidth / 2);\r\n\r\n    if(x>0) x = 0\r\n    \r\n    setScrollX(x)\r\n  }\r\n\r\n  const handleRightArrow = () => {\r\n    let x = scrollX - Math.round(window.innerWidth / 2);\r\n    let listWidth = items.results.length * 150\r\n    if((window.innerWidth - listWidth) > x) {\r\n      x = (window.innerWidth - listWidth) - 60;\r\n    }\r\n\r\n    setScrollX(x)\r\n    \r\n  }\r\n\r\n  return (\r\n    <MovieRowStyled>\r\n      <h2>{title}</h2>\r\n      <div onClick={handleLeftArrow} className=\"movieRow-left movieRow\">\r\n        <NavigateBeforeIcon style={{fontSize: 50}} />\r\n      </div>\r\n\r\n      <div onClick={handleRightArrow} className=\"movieRow-right movieRow\">\r\n        <NavigateNextIcon style={{fontSize: 50}} />\r\n      </div>\r\n\r\n\r\n      <div className=\"movieRow--listarea\">\r\n          <div className=\"movieRow--list\"\r\n            style={{\r\n              marginLeft: scrollX,\r\n              width: items.results.length * 150\r\n            }}\r\n          >\r\n            {items.results.length > 0 && items.results.map((item, key) =>(\r\n              <div key={key} className=\"movieRow--item\">\r\n                <img key={key} src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n      </div>\r\n    </MovieRowStyled>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const FooterStyled = styled.div`\r\n  margin: 50px 0;\r\n  text-align: center;\r\n`;\r\n","import React from 'react'\r\nimport { FooterStyled } from './style'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <FooterStyled>\r\n      feito com <span role=\"img\" aria-label=\"coração roxo\">💜</span><br />\r\n      Direitos de imagem para netflix \r\n      e dados pegos do site Themoviedb.org\r\n    </FooterStyled>\r\n  )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport Tmdb from './services/api'\r\n\r\nimport GlobalStyle from './styles/global'\r\n\r\nimport Header from './components/Header'\r\nimport FeatureMovie from './components/FeatureMovie/index'\r\nimport MovieRow from './components/MovieRow/index.jsx'\r\nimport Footer from './components/Footer'\r\n\r\nexport const App = () => {\r\n  const [movieList, setMovieList] = useState([])\r\n  const [featureData, setFeatureData] = useState(null)\r\n  const [blackHeader, setBlackHeader] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const loadAll = async () => {\r\n      let list = await Tmdb.getHomeList()\r\n      setMovieList(list)\r\n\r\n      let originalsFromNetflix = list.filter(original => original.slug === 'originals')\r\n      let randomChosen = Math.floor(Math.random() * (originalsFromNetflix[0].items.results.length - 1))\r\n      let chosen = originalsFromNetflix[0].items.results[randomChosen]\r\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\r\n      \r\n      setFeatureData(chosenInfo)\r\n    }\r\n    loadAll() \r\n  },[])\r\n\r\n  useEffect(() =>{\r\n    const scrollListener = () =>{\r\n      if(window.scrollY > 10){\r\n        setBlackHeader(true)\r\n      }else{\r\n        setBlackHeader(false)\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', scrollListener)\r\n  \r\n    return () => {\r\n      window.removeEventListener(\"scroll\", scrollListener)\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <>\r\n    <GlobalStyle />\r\n      <div className=\"page\">\r\n        <Header black={blackHeader} />\r\n\r\n        {featureData &&\r\n          <FeatureMovie item={featureData} />\r\n        }\r\n\r\n        <section className=\"lists\">\r\n          {movieList.map((item, key)=>(\r\n          <MovieRow key={key} title={item.title} items={item.items} />\r\n          ))}\r\n        </section>\r\n\r\n        <Footer />\r\n          {movieList.length<=0 &&\r\n            <div className=\"loading\">\r\n                <img src=\"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2000,c_limit/Netflix_LoadTime.gif\" alt=\"\" />\r\n            </div>\r\n          }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {App} from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}